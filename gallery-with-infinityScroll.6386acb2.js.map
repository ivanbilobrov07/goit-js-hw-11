{"mappings":"qhBAAAA,EAAA,S,8BCAA,MAAMC,EAAgBC,SAASC,cAAc,gBACvCC,EAAaF,SAASC,cAAc,YACpCE,EAAgBH,SAASC,cAAc,mBAEvCG,GADqBJ,SAASC,cAAc,oBACrBD,SAASC,cAAc,mBCJpD,IAAAI,EAAAP,EAAA,SAOA,MAAMQ,EAeJC,uBACEC,KAAKC,M,CAGPC,UAAUC,GACR,GAAoB,IAAhBA,EAAKC,OAAc,CACrB,GAAkB,IAAdJ,KAAKC,KACP,MAAM,IAAII,MAAM,oCAGlB,MAAM,IAAIA,MAAM,+B,EAIpBC,0BACEX,EAAcY,UAAUC,OAAO,UAE/B,MAMML,SANiBN,EAAAY,QACpBC,IAAI,4BAAeV,KAAKW,eAAeX,KAAKC,QAC5CW,OAAM,KACL,MAAM,IAAIP,MAAM,eAAe,KAGbF,KAGtB,OAFAH,KAAKE,UAAUC,EAAKU,MAEbV,EAAKU,I,CAxCdC,YAAYC,EAAcC,GACxBhB,KAAKC,KAAO,EAEZD,KAAKW,OAAS,IAAIM,gBAAgB,CAChCC,IAPU,qCAQVC,EAAGJ,EACHK,KAAMJ,EACNK,WAAY,QACZC,YAAa,aACbC,YAAY,EACZC,SAAU,I,EClBhB,MAAMC,EAAenB,MAAMH,GAClBA,EACJuB,KACC,EAACC,aACCA,EAAYC,cACZA,EAAaC,KACbA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,KACI,oCACKL,0DACiBD,WAAsBE,uGAGjCC,oEAGAC,uEAGGC,wEAGCC,0CAKtBC,KAAK,IHfJC,EAAiB7B,MAAMH,IAC3BR,EAAcY,UAAU6B,IAAI,UAC5B1C,EAAW2C,mBAAmB,kBAAmBZ,EAAatB,IAE9DP,EAAqB0C,MAAMC,SAAW,WACtC5C,EAAc2C,MAAME,IAAM,mBAAmB,EAGzCC,EAAsBnC,MAAOoC,EAASC,KAC1CD,EAAQE,SAAQtC,MAAMuC,IACpB,GAAIA,EAAMC,eAAgB,CACxBC,EAAWhD,uBAEX,IACE,MAAMiD,QAAoBD,EAAWE,0BAC/Bd,EAAea,GACrBE,EAASC,S,CACT,MAAOC,GACPzD,EAAcY,UAAU6B,IAAI,UAC5BO,EAASU,UAAUzD,GACnB0D,EAAAC,GAASC,OAAOC,QAAQL,EAAEM,Q,KAG9B,EAyCJ,IAAIX,EAAYG,EAEhB3D,EAAcoE,iBAAiB,UAxCNrD,MAAM8C,IAC7BA,EAAEQ,iBAEFlE,EAAWmE,UAAY,GACvBjE,EAAqB0C,MAAMC,SAAW,SACtC5C,EAAc2C,MAAME,IAAM,MAE1B,MAAMsB,EAAUV,EAAEW,cAElB,IAAIhD,EAAe+C,EAAQE,SAASC,YAAYC,MAChD,MAAMlD,EAAiB8C,EAAQE,SAASG,SAASD,MAEjDnB,EAAa,IAAIjD,EAAWiB,EAAcC,GAE1C,IACE,MAAMgC,QAAoBD,EAAWE,0BAC/Bd,EAAea,E,CACrB,MAAOoB,GACPzE,EAAcY,UAAU6B,IAAI,UAC5BkB,EAAAC,GAASC,OAAOC,QAAQW,EAAEV,Q,CAG5BI,EAAQE,SAASC,YAAYC,MAAQ,GAErChB,EAAW,IAAII,EAAAe,GAAJ,CAAmB,aAAc,CAC1CC,aAAc,MACdC,aAAc,MAQC,IAAIC,qBAAqB/B,EAL5B,CACZgC,KAAM,KACNC,WAAY,QACZC,UAAW,IAGJC,QAAQhF,EAAqB","sources":["src/js/index(scroll).js","src/js/js-helpers-2/takingRefs.js","src/js/js-helpers-2/pixabay-api.js","src/js/js-helpers-2/createMarkup.js"],"sourcesContent":["import OnlyScroll from 'only-scrollbar';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport {\n  galleryRef,\n  searchFormRef,\n  loaderIconRef,\n  galleryControlersRef,\n  galleryWrappersRef,\n} from './js-helpers-2/takingRefs';\nimport { APIHandler } from './js-helpers-2/pixabay-api';\nimport { createMarkup } from './js-helpers-2/createMarkup';\n\nconst generateMarkup = async data => {\n  loaderIconRef.classList.add('hidden');\n  galleryRef.insertAdjacentHTML('beforeend', await createMarkup(data));\n\n  galleryControlersRef.style.position = 'relative';\n  loaderIconRef.style.top = 'calc(100% - 50px)';\n};\n\nconst handleObserverEvent = async (entries, observer) => {\n  entries.forEach(async entry => {\n    if (entry.isIntersecting) {\n      apiHandler.incrementPageCounter();\n\n      try {\n        const dataFromAPI = await apiHandler.fetchItemsByvalue();\n        await generateMarkup(dataFromAPI);\n        lightbox.refresh();\n      } catch (e) {\n        loaderIconRef.classList.add('hidden');\n        observer.unobserve(galleryControlersRef);\n        Notiflix.Notify.failure(e.message);\n      }\n    }\n  });\n};\n\nconst handleFormSubmit = async e => {\n  e.preventDefault();\n\n  galleryRef.innerHTML = '';\n  galleryControlersRef.style.position = 'static';\n  loaderIconRef.style.top = '50%';\n\n  const formRef = e.currentTarget;\n\n  let dataToSearch = formRef.elements.searchQuery.value;\n  const languageOfData = formRef.elements.language.value;\n\n  apiHandler = new APIHandler(dataToSearch, languageOfData);\n\n  try {\n    const dataFromAPI = await apiHandler.fetchItemsByvalue();\n    await generateMarkup(dataFromAPI);\n  } catch (e) {\n    loaderIconRef.classList.add('hidden');\n    Notiflix.Notify.failure(e.message);\n  }\n\n  formRef.elements.searchQuery.value = '';\n\n  lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n\n  var options = {\n    root: null,\n    rootMargin: '300px',\n    threshold: 1.0,\n  };\n  const observer = new IntersectionObserver(handleObserverEvent, options);\n  observer.observe(galleryControlersRef);\n};\n\nlet apiHandler, lightbox;\n\nsearchFormRef.addEventListener('submit', handleFormSubmit);\n","const searchFormRef = document.querySelector('.search-form');\nconst galleryRef = document.querySelector('.gallery');\nconst loaderIconRef = document.querySelector('.loader-wrapper');\nconst galleryWrappersRef = document.querySelector('.gallery-wrapper');\nconst galleryControlersRef = document.querySelector('.gallery-inner');\n\nexport {\n  searchFormRef,\n  galleryRef,\n  loaderIconRef,\n  galleryControlersRef,\n  galleryWrappersRef,\n};\n","import axios from 'axios';\n\nimport { loaderIconRef } from './takingRefs';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '37108036-8a6d23bc06a2bda3e904321d5';\n\nclass APIHandler {\n  constructor(dataToSearch, languageOfData) {\n    this.page = 1;\n\n    this.params = new URLSearchParams({\n      key: API_KEY,\n      q: dataToSearch,\n      lang: languageOfData,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      per_page: 40,\n    });\n  }\n\n  incrementPageCounter() {\n    this.page++;\n  }\n\n  checkData(data) {\n    if (data.length === 0) {\n      if (this.page === 1) {\n        throw new Error('Cannot find photos on this topic');\n      }\n\n      throw new Error('No more photos on this topic');\n    }\n  }\n\n  async fetchItemsByvalue() {\n    loaderIconRef.classList.remove('hidden');\n\n    const response = await axios\n      .get(`${BASE_URL}?${this.params}&page=${this.page}`)\n      .catch(() => {\n        throw new Error('Out of range');\n      });\n\n    const data = response.data;\n    this.checkData(data.hits);\n\n    return data.hits;\n  }\n}\n\nexport { APIHandler };\n","const createMarkup = async data => {\n  return data\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<div photo-card>\n      <a href=\"${largeImageURL}\" class=\"card-link\">\n    <img class=\"photo-img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" /></a>\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes</b> ${likes}\n      </p>\n      <p class=\"info-item\">\n        <b>Views</b> ${views}\n      </p>\n      <p class=\"info-item\">\n        <b>Comments</b> ${comments}\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads</b> ${downloads}\n      </p>\n    </div>\n    </div>`\n    )\n    .join('');\n};\n\nexport { createMarkup };\n"],"names":["parcelRequire","$30b9902d2bce094a$export$18967640b1430a3","document","querySelector","$30b9902d2bce094a$export$7ccb58989d57b8c2","$30b9902d2bce094a$export$c2c06f658e2657b3","$30b9902d2bce094a$export$d91882d69e2c0809","$2shzp","$a7c05f7965e84838$export$4ba0ff064c127035","incrementPageCounter","this","page","checkData","data","length","Error","async","classList","remove","default","get","params","catch","hits","constructor","dataToSearch","languageOfData","URLSearchParams","key","q","lang","image_type","orientation","safesearch","per_page","$c96ee28de7b3db77$export$24783e9f3a24abe4","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","$4ee4f49b2334e46c$var$generateMarkup","add","insertAdjacentHTML","style","position","top","$4ee4f49b2334e46c$var$handleObserverEvent","entries","observer","forEach","entry","isIntersecting","$4ee4f49b2334e46c$var$apiHandler","dataFromAPI","fetchItemsByvalue","$4ee4f49b2334e46c$var$lightbox","refresh","e","unobserve","$parcel$interopDefault","$7Y9D8","Notify","failure","message","addEventListener","preventDefault","innerHTML","formRef","currentTarget","elements","searchQuery","value","language","e1","$fZKcF","captionsData","captionDelay","IntersectionObserver","root","rootMargin","threshold","observe"],"version":3,"file":"gallery-with-infinityScroll.6386acb2.js.map"}